{"version":3,"sources":["assets/images/logo-text.png","assets/images/logo-text-white.png","assets/images/photo-reel.png","common/Button.jsx","common/consts/routes.js","common/Row.jsx","common/Column.jsx","common/SectionHeader.jsx","common/Input.jsx","common/HTMLContent.jsx","components/MailingListSection.jsx","common/Header.jsx","common/Footer.jsx","common/consts/scroll-routes.js","common/consts/dimensions.js","components/HeroSection.jsx","components/MissionStatementSection.jsx","components/PhotoReelSection.jsx","components/Event.jsx","common/consts/dates.js","components/HomePageEventsSection.jsx","scripts/googleSheets.js","scripts/isTodayOrInTheFuturePredicate.js","pages/index.jsx","components/EventsPageEventsSection.jsx","pages/Events.jsx","components/AboutSection.jsx","components/Officer.jsx","components/OfficersSection.jsx","pages/About.jsx","components/ContactForm.jsx","pages/Contact.jsx","pages/404.jsx","components/EventStreamsSection.jsx","scripts/hasStreamURL.js","pages/EventStreams.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","raised","text","href","onPress","hasShadow","hasDarkShadow","isSecondary","className","isWhite","hasDownArrow","isTertiary","disabled","classes","classNames","onClick","target","rel","HOME_PAGE_ROUTE","EVENTS_PAGE_ROUTE","ABOUT_PAGE_ROUTE","CONTACT_PAGE_ROUTE","EVENT_STREAMS_PAGE_ROUTE","children","SectionHeader","componentClasses","titleClasses","Row","Column","startCase","inputClasses","textAreaClasses","isTextArea","name","id","cols","rows","html","dangerouslySetInnerHTML","__html","MailingListSection","state","email","result","message","resetState","setTimeout","setState","handleSubmit","e","preventDefault","stopPropagation","this","isInModal","url","render","subscribe","status","Fragment","HTMLContent","Input","placeholder","onChange","value","EMAIL","FNAME","LNAME","type","isEmpty","renderContent","Component","PACKAGE_NAME","TRANSPARENT_NAV_BAR_CLASS","Header","handleMobileNavClick","menu","document","querySelector","addEventListener","isDropDownOpen","toggleMobileMenu","isModalVisible","getClassNames","isTransparent","renderMobileMenu","data-target","aria-label","aria-expanded","aria-hidden","renderMenuItem","to","renderMenu","renderModal","visible","onClose","getElementById","dataset","classList","toggle","removeEventListener","role","src","whiteLogo","alt","logo","Footer","NAV_BAR_HEIGHT","EVENTS_SECTION_SCROLL_ROUTE","scrollRoutes","heroSectionClassNames","bigFontClassNames","onLearnMorePress","scroller","scrollTo","duration","smooth","offset","HeroSection","backgroundUrl","MissionStatementSection","PhotoReelSection","photoReel","eventComponentClassNames","renderEventDetails","event","showStreamURL","title","date","location","time","eventHTML","formattedDate","moment","format","window","streamURL","eventUrl","renderButton","Event","imageUrl","renderEventImage","parsedDate","day","month","toUpper","renderEventDate","HomePageEventsSection","events","Array","isArray","map","renderEvents","finishedCallBack","officers","initGoogleSheets","finishedCB","updateCount","Tabletop","init","key","callback","processEventsData","simpleSheet","processOfficersData","update","getAllOfficers","getAllEvents","data","tabletop","forEach","officer","addOfficer","order","parseInt","push","today","future","isInTheFuture","diff","isToday","isSame","IndexPage","isAtHeroSection","dataLoadedCB","filter","isTodayOrInTheFuturePredicate","renderHeroSection","onEnter","onLeave","topOffset","EventsPageEventsSection","getEvents","upcomingEvents","reverse","pastEvents","difference","EventsPage","AboutSection","Officer","firstName","lastName","position","linkedin","image","website","capitalize","OfficersSection","renderOfficers","AboutPage","sortBy","ContactForm","action","method","htmlFor","ContactPage","NotFoundPage","length","EventStreamsPage","EventStreamsSection","hasStreamURL","App","path","component","EventStreams","exact","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1bd3f0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-text.deeb7ee7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-text-white.af336776.png\";","module.exports = __webpack_public_path__ + \"static/media/photo-reel.b98efbd9.png\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport { FaSortDown as DownArrow } from \"react-icons/fa\";\n\nconst PACKAGE_NAME = \"button-component\";\nconst RAISED_BUTTON_CLASS = \"is-raised\";\nconst GHOST_BUTTON_CLASS = \"is-ghost\";\nconst HAS_SHADOW_CLASS = \"has-shadow\";\nconst HAS_DARK_SHADOW_CLASS = \"dark-shadow\";\nconst SECONDARY_BUTTON_CLASS = \"button-secondary\";\nconst WHITE_BUTTON_CLASS = \"button-white\";\nconst DISABLED_BUTTON_CLASS = \"disabled-button\";\nconst TERTIARY_BUTTON_CLASS = \"is-tertiary\";\n\nconst renderDownArrow = () => (\n  <span className=\"down-arrow\">\n    <DownArrow />\n  </span>\n);\n\nconst Button = props => {\n  const {\n    raised,\n    text,\n    href,\n    onPress,\n    hasShadow,\n    hasDarkShadow,\n    isSecondary,\n    className,\n    isWhite,\n    hasDownArrow,\n    isTertiary,\n    disabled\n  } = props;\n  const classes = classNames(\n    PACKAGE_NAME,\n    `${raised ? RAISED_BUTTON_CLASS : GHOST_BUTTON_CLASS}`,\n    hasShadow && HAS_SHADOW_CLASS,\n    hasDarkShadow && HAS_DARK_SHADOW_CLASS,\n    isSecondary && SECONDARY_BUTTON_CLASS,\n    isWhite && WHITE_BUTTON_CLASS,\n    disabled && DISABLED_BUTTON_CLASS,\n    isTertiary && TERTIARY_BUTTON_CLASS,\n    className\n  );\n\n  return (\n    <div className=\"button-container\">\n      <button\n        {...props}\n        href={href}\n        onClick={onPress}\n        className={classes}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {text}\n        {hasDownArrow && renderDownArrow()}\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","export const HOME_PAGE_ROUTE = \"/\";\nexport const EVENTS_PAGE_ROUTE = \"/events\";\nexport const ABOUT_PAGE_ROUTE = \"/about\";\nexport const CONTACT_PAGE_ROUTE = \"/contact\";\nexport const EVENT_STREAMS_PAGE_ROUTE = \"/eventstreams\";\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst PACKAGE_NAME = \"row-component\";\n\nexport default ({ children, className }) => (\n  <div className={classNames(PACKAGE_NAME, className)}>{children}</div>\n);\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst PACKAGE_NAME = \"column-component\";\n\nexport default ({ children, className }) => (\n  <div className={classNames(PACKAGE_NAME, className)}>{children}</div>\n);\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { startCase } from \"lodash\";\nimport classNames from \"classnames\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\n\nconst PACKAGE_NAME = \"section-header-component\";\nconst DEFAULT_TITLE_CLASSNAME = \"title\";\nconst SECONDARY_TITLE_CLASSNAME = \"title-secondary\";\n\nconst SectionHeader = ({ children, text, isSecondary, className }) => {\n  const componentClasses = classNames(PACKAGE_NAME, className);\n\n  const titleClasses = classNames(\n    DEFAULT_TITLE_CLASSNAME,\n    isSecondary && SECONDARY_TITLE_CLASSNAME\n  );\n\n  return (\n    <Row className={componentClasses}>\n      <Column className=\"container section-header-container\">\n        <Row className=\"section-header-text-container\">\n          <h1 className={titleClasses}>{startCase(text)}</h1>\n        </Row>\n        {children}\n      </Column>\n    </Row>\n  );\n};\n\nSectionHeader.propTypes = {\n  text: propTypes.string,\n};\n\nexport default SectionHeader;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst PACKAGE_NAME = \"input-component\";\n\nconst inputClasses = classNames(PACKAGE_NAME, \"input\", \"is-rounded\");\n\nconst textAreaClasses = classNames(PACKAGE_NAME, \"textarea\");\n\nexport default props => (\n  <div className=\"input-container\">\n    {props.isTextArea ? (\n      <textarea\n        className={textAreaClasses}\n        name=\"\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n        {...props}\n      />\n    ) : (\n      <input className={inputClasses} {...props} />\n    )}\n  </div>\n);\n","import React from \"react\";\n\nexport default ({ html, classNames = \"\" }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} className={classNames} />\n);\n","import React, { Component } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport classNames from \"classnames\";\nimport { FaFacebookSquare as FacebookIcon } from \"react-icons/fa\";\nimport { FaEnvelope as MailIcon } from \"react-icons/fa\";\nimport { FaDiscord as DiscordIcon } from \"react-icons/fa\";\nimport { FaInstagram as InstagramIcon } from \"react-icons/fa\";\nimport SectionHeader from \"../common/SectionHeader\";\nimport Button from \"../common/Button\";\nimport Input from \"../common/Input\";\nimport Row from \"../common/Row\";\nimport HTMLContent from \"../common/HTMLContent\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nconst PACKAGE_NAME = \"mailing-list-section-component\";\nconst SECTION_HEADER_CLASS_NAME = \"mailing-list-section-header\";\nconst MAILCHIMP_URL =\n  \"https://facebook.us16.list-manage.com/subscribe/post?u=5ae11bc484c4c935998f1fcbc&amp;id=01b1dca7fa\";\nclass MailingListSection extends Component {\n  state = {\n    email: null,\n    result: null,\n    message: \"\",\n  };\n\n  resetState = () =>\n    setTimeout(() => this.setState({ result: null, message: \"\" }), 3000);\n\n  // TODO: fix this by adding the required fields for the form\n  handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    // console.log(e);\n    // try {\n    //   addToMailchimp(this.state.email, { FNAME: \"N/A\", LNAME: \"N/A\" })\n    //     .then(result => {\n    //       // Mailchimp always returns a 200 response\n    //       // So we check the result for MC errors & failures\n    //       if (result.result !== `success`) {\n    //         this.setState(\n    //           {\n    //             status: `error`,\n    //             message: result.msg\n    //           },\n    //           this.resetState\n    //         );\n    //       } else {\n    //         // Email address succesfully subcribed to Mailchimp\n    //         this.setState(\n    //           {\n    //             status: `success`,\n    //             message: result.msg\n    //           },\n    //           this.resetState\n    //         );\n    //       }\n    //     })\n    //     .catch(err => {\n    //       // Network failures, timeouts, etc\n    //       this.setState(\n    //         {\n    //           status: `error`,\n    //           message: err\n    //         },\n    //         this.resetState\n    //       );\n    //     });\n    // } catch (error) {\n    //   this.setState(\n    //     {\n    //       status: `error`,\n    //       message: \"Invalid email entered\"\n    //     },\n    //     this.resetState\n    //   );\n    // }\n  };\n\n  renderContent() {\n    return (\n      <SectionHeader\n        text=\"Join our mailing list\"\n        className={classNames(\n          SECTION_HEADER_CLASS_NAME,\n          this.props.isInModal && \"is-in-modal\"\n        )}\n      >\n        <MailchimpSubscribe\n          url={MAILCHIMP_URL}\n          render={({ subscribe, status, message }) => (\n            <React.Fragment>\n              <HTMLContent html={message} />\n              <Row className=\"input-row\">\n                <div className=\"email-input-container\">\n                  <Input\n                    placeholder=\"example@domain.com\"\n                    onChange={(e) => this.setState({ email: e.target.value })}\n                  />\n                </div>\n                <div className=\"add-button-container\">\n                  <Button\n                    text=\"Add me!\"\n                    onPress={() =>\n                      subscribe({\n                        EMAIL: this.state.email,\n                        FNAME: \"N-A\",\n                        LNAME: \"N-A\",\n                      })\n                    }\n                    type=\"submit\"\n                    raised\n                    hasShadow\n                    hasDarkShadow\n                    disabled={isEmpty(this.state.email)}\n                  />\n                </div>\n              </Row>\n            </React.Fragment>\n          )}\n        />\n        {this.props.isInModal ? (\n          <Row className=\"links-row\">\n            <a\n              href=\"https://www.facebook.com/animationutd/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FacebookIcon />\n            </a>\n            <a\n              href=\"mailto:utdanimationguild@gmail.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <MailIcon />\n            </a>\n            <a\n              href=\"https://www.instagram.com/utdallas_ag/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <InstagramIcon />\n            </a>\n            <a\n              href=\"https://discord.gg/AGzrNd8\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <DiscordIcon />\n            </a>\n          </Row>\n        ) : (\n          <Row className=\"links-row\" />\n        )}\n      </SectionHeader>\n    );\n  }\n\n  render() {\n    if (this.props.isInModal) {\n      return this.renderContent();\n    }\n\n    return (\n      <section className={PACKAGE_NAME}>\n        <div className=\"container\">{this.renderContent()}</div>\n      </section>\n    );\n  }\n}\n\nexport default MailingListSection;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Rodal from \"rodal\";\nimport logo from \"../assets/images/logo-text.png\";\nimport whiteLogo from \"../assets/images/logo-text-white.png\";\nimport Button from \"./Button\";\nimport {\n  HOME_PAGE_ROUTE,\n  EVENTS_PAGE_ROUTE,\n  ABOUT_PAGE_ROUTE,\n  CONTACT_PAGE_ROUTE\n} from \"./consts/routes\";\n\n// TODO remove this\nimport \"rodal/lib/rodal.css\";\nimport MailingListSection from \"../components/MailingListSection\";\n\nconst PACKAGE_NAME = \"header-component\";\nconst TRANSPARENT_NAV_BAR_CLASS = \"is-transparent\";\n\nclass Header extends Component {\n  handleMobileNavClick = () => {\n    const menu = document.querySelector(\".navbar-burger\");\n\n    if (menu) {\n      menu.addEventListener(\"click\", () => {\n        this.setState({ isDropDownOpen: !this.state.isDropDownOpen }, () =>\n          this.toggleMobileMenu(menu)\n        );\n      });\n    }\n  };\n\n  toggleMobileMenu(menu) {\n    const target = document.getElementById(menu.dataset.target);\n\n    menu.classList.toggle(\"is-active\");\n    target.classList.toggle(\"is-active\");\n  }\n\n  componentDidMount() {\n    this.handleMobileNavClick();\n  }\n\n  componentWillUnmount() {\n    const menu = document.querySelector(\".navbar-burger\");\n\n    menu.removeEventListener(\"click\", () => {\n      this.setState({ isDropDownOpen: !this.state.isDropDownOpen }, () =>\n        this.toggleMobileMenu(menu)\n      );\n    });\n  }\n\n  state = {\n    isModalVisible: false,\n    isDropDownOpen: false\n  };\n\n  getClassNames = isTransparent => {\n    return classNames(\n      PACKAGE_NAME,\n      \"navbar\",\n      \"is-fixed-top\",\n      isTransparent && !this.state.isDropDownOpen && TRANSPARENT_NAV_BAR_CLASS,\n      this.state.isDropDownOpen && \"is-navbar-menu-active\"\n    );\n  };\n\n  renderMobileMenu = () => {\n    return (\n      <button\n        className=\"navbar-burger\"\n        data-target=\"navMenu\"\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n      >\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n      </button>\n    );\n  };\n\n  renderMenuItem = (to, text) => {\n    return (\n      <div className=\"navbar-item text-link\">\n        <Link to={to}>{text}</Link>\n      </div>\n    );\n  };\n\n  renderMenu = isTransparent => {\n    return (\n      <div className=\"navbar-menu\" id=\"navMenu\">\n        <div className=\"navbar-start\" />\n        <div className=\"navbar-end\">\n          {this.renderMenuItem(HOME_PAGE_ROUTE, \"Home\")}\n          {this.renderMenuItem(EVENTS_PAGE_ROUTE, \"Events\")}\n          {this.renderMenuItem(ABOUT_PAGE_ROUTE, \"About\")}\n          {this.renderMenuItem(CONTACT_PAGE_ROUTE, \"Contact\")}\n          <div className=\"navbar-item\" href=\"https://bulma.io/\">\n            <Button\n              text=\"Keep In Touch\"\n              raised={!isTransparent || this.state.isDropDownOpen}\n              isWhite={isTransparent && !this.state.isDropDownOpen}\n              hasShadow\n              isTertiary\n              onPress={() => this.setState({ isModalVisible: true })}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  renderModal = () => {\n    return (\n      <Rodal\n        visible={this.state.isModalVisible}\n        onClose={() => this.setState({ isModalVisible: false })}\n      >\n        {<MailingListSection isInModal />}\n      </Rodal>\n    );\n  };\n\n  render() {\n    const { isTransparent } = this.props;\n\n    return (\n      <nav\n        className={this.getClassNames(isTransparent)}\n        role=\"navigation\"\n        aria-label=\"main-navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link className=\"navbar-item logo-container\" to=\"/\">\n              <img\n                src={whiteLogo}\n                className=\"logo white-logo\"\n                alt=\"Animation Guild at UT Dallas\"\n              />\n              <img\n                src={logo}\n                className=\"logo colored-logo\"\n                alt=\"Animation Guild at UT Dallas\"\n              />\n            </Link>\n            {this.renderMobileMenu()}\n          </div>\n          {this.renderMenu(isTransparent)}\n        </div>\n        {this.renderModal()}\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst PACKAGE_NAME = \"footer-component\";\n\nconst Footer = () => {\n  const classes = classNames(PACKAGE_NAME, \"footer\");\n\n  return (\n    <div className=\"footer-text\">\n      <p>Made with ❤ by the Animation Guild Officers</p>\n      <footer className={classes} />\n    </div>\n  );\n};\n\nexport default Footer;\n","export default {\n  EVENTS_SECTION_SCROLL_ROUTE: \"events-id\",\n  TOP_OF_THE_PAGE_ROUTE: \"top-of-the-page-id\",\n};\n","export const NAV_BAR_HEIGHT = 80;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { scroller } from \"react-scroll\";\nimport Button from \"../common/Button\";\nimport scrollRoutes from \"../common/consts/scroll-routes\";\nimport { NAV_BAR_HEIGHT } from \"../common/consts/dimensions\";\n\nconst { EVENTS_SECTION_SCROLL_ROUTE } = scrollRoutes;\n\nconst PACKAGE_NAME = \"hero-section-component hero\";\n\nconst heroSectionClassNames = classNames(PACKAGE_NAME, \"hero\");\nconst bigFontClassNames = classNames(\"huge-font\", \"title\");\n\nconst onLearnMorePress = () => {\n  scroller.scrollTo(EVENTS_SECTION_SCROLL_ROUTE, {\n    duration: 1000,\n    smooth: true,\n    offset: -NAV_BAR_HEIGHT\n  });\n};\n\nconst HeroSection = ({ backgroundUrl }) => (\n  <section className={heroSectionClassNames}>\n    <div className=\"text-container hero-body container\">\n      <h3>Welcome to</h3>\n      <h1 className={bigFontClassNames}>Animation Guild</h1>\n      <h3>at University of Texas at Dallas</h3>\n      <div className=\"button-container\">\n        <Button\n          text=\"Learn More\"\n          isWhite\n          hasDarkShadow\n          hasDownArrow\n          onPress={onLearnMorePress}\n        />\n      </div>\n    </div>\n  </section>\n);\n\nexport default HeroSection;\n","import React from \"react\";\n\nconst PACKAGE_NAME = \"mission-statement-section-component\";\n\nconst MissionStatementSection = () => (\n  <section className={PACKAGE_NAME}>\n    <div className=\"container\">\n      <h1 className=\"title\">\n        Our goal is to build a community of students working together to break\n        into the animation industry\n      </h1>\n      <p className=\"sub-title\">\n        We aim to become an open and collaborative community where members feel\n        inspired to fulfill their creative potential\n      </p>\n    </div>\n  </section>\n);\n\nexport default MissionStatementSection;\n","import React from \"react\";\nimport photoReel from \"../assets/images/photo-reel.png\";\n\nconst PACKAGE_NAME = \"photo-reel-section-component\";\n\nconst PhotoReelSection = () => (\n  <section className={PACKAGE_NAME}>\n    <div>\n      <img\n        src={photoReel}\n        className=\"logo\"\n        alt=\"Animation Guild at UT Dallas\"\n      />\n    </div>\n  </section>\n);\n\nexport default PhotoReelSection;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { toUpper } from \"lodash\";\nimport classNames from \"classnames\";\nimport HTMLContent from \"../common/HTMLContent\";\nimport Button from \"../common/Button\";\nimport { EVENT_TITLE_DATE_FORMAT } from \"../common/consts/dates\";\n\nconst PACKAGE_NAME = \"event-component\";\nconst eventComponentClassNames = classNames(\"container\", PACKAGE_NAME);\n\nconst renderEventImage = (imageUrl) => (\n  <div className=\"event-image image is-2by1\">\n    <img src={imageUrl} alt=\"\" />\n  </div>\n);\nconst renderButton = (event, showStreamURL) => {\n  if (showStreamURL) {\n    return (\n      <Button\n        text=\"Event Stream\"\n        onPress={() => (window.location.href = event.streamURL)}\n        raised\n        hasShadow\n        isTertiary\n      />\n    );\n  }\n  return (\n    <Button\n      text=\"Learn More\"\n      onPress={() => (window.location.href = event.eventUrl)}\n    />\n  );\n};\nconst renderEventDetails = (event, showStreamURL) => {\n  const { title, date, location, time, eventHTML } = event;\n  const formattedDate = moment(date).format(EVENT_TITLE_DATE_FORMAT);\n  return (\n    <div className=\"event-content container content\">\n      <h2>{title}</h2>\n      <h3>\n        {`${formattedDate}`}\n        {location && `, ${location}`}\n      </h3>\n      <h3>{time}</h3>\n      <HTMLContent html={eventHTML} classNames=\"content\" />\n      <div className=\"learn-more-button-container\">\n        {renderButton(event, showStreamURL)}\n      </div>\n    </div>\n  );\n};\n\nconst renderEventDate = (date) => {\n  const parsedDate = moment(date);\n  const day = parsedDate.format(\"D\");\n  const month = toUpper(parsedDate.format(\"MMM\"));\n\n  return (\n    <div className=\"event-date-container\">\n      <p className=\"event-month\">{month}</p>\n      <p className=\"event-day\">{day}</p>\n    </div>\n  );\n};\n\nconst Event = ({ event, showStreamURL = false }) => {\n  const { date, imageUrl } = event;\n\n  return (\n    <div className={eventComponentClassNames}>\n      {renderEventImage(imageUrl)}\n      {renderEventDetails(event, showStreamURL)}\n      {renderEventDate(date)}\n    </div>\n  );\n};\n\nexport default Event;\n","export const EVENT_TITLE_DATE_FORMAT = \"dddd, MMMM DD\";\n","import React from \"react\";\nimport SectionHeader from \"../common/SectionHeader\";\nimport Event from \"./Event\";\nimport Button from \"../common/Button\";\nimport { Link } from \"react-router-dom\";\nconst PACKAGE_NAME = \"home-page-events-section-component\";\nconst BIG_SECTION_HEADER_CLASS_NAME = \"big-section-header\";\n\nconst renderEvents = events => events.map(event => <Event event={event} />);\nconst HomePageEventsSection = ({ events }) => (\n  <section className={PACKAGE_NAME}>\n    <div className=\"container\">\n      <SectionHeader text=\"upcoming events\" />\n      <div className=\"events-container\">\n        {Array.isArray(events) && renderEvents(events)}\n      </div>\n      <SectionHeader\n        className={BIG_SECTION_HEADER_CLASS_NAME}\n        text=\"More Events Coming Soon!\"\n        isSecondary\n      >\n        <Link to={\"Events\"}>\n          <Button text=\"View Our Past Events\" isSecondary />\n        </Link>\n      </SectionHeader>\n    </div>\n  </section>\n);\n\nexport default HomePageEventsSection;\n","import Tabletop from \"tabletop\";\n\nconst officersURL =\n  \"https://docs.google.com/spreadsheets/d/1PXeXmX5u1cB-1TdtTfLf7tqsav203c4Qo0quof5BUaQ/edit?usp=sharing\";\n\nconst eventsURL =\n  \"https://docs.google.com/spreadsheets/d/1V3ZVLOu47u_P1yBePGJuxginScsswPu3gTS8W0A3N_4/edit?usp=sharing\";\n\nlet finishedCallBack = null;\n\nlet officers = [];\nlet events = [];\n\nconst initGoogleSheets = finishedCB => {\n  finishedCallBack = finishedCB;\n  officers = [];\n  events = [];\n  updateCount = 0;\n  Tabletop.init({\n    key: eventsURL,\n    callback: processEventsData,\n    simpleSheet: true\n  });\n\n  Tabletop.init({\n    key: officersURL,\n    callback: processOfficersData,\n    simpleSheet: true\n  });\n};\n\nlet updateCount = 0;\nconst update = () => {\n  updateCount++;\n  if (updateCount === 2 && finishedCallBack !== null) {\n    finishedCallBack();\n  }\n};\n\nconst getAllOfficers = () => {\n  return officers;\n};\n\nconst getAllEvents = () => {\n  return events;\n};\n\nconst processOfficersData = (data, tabletop) => {\n  data.forEach(officer => addOfficer(officer));\n  update();\n};\nconst addOfficer = officer => {\n  if (officer.order !== \"\") {\n    officer.order = parseInt(officer.order);\n  } else {\n    officer.order = 100;\n  }\n  officers.push(officer);\n};\nconst processEventsData = (data, tabletop) => {\n  data.forEach(event => events.push(event));\n  update();\n};\n\nexport { initGoogleSheets, getAllOfficers, getAllEvents };\n","import moment from \"moment\";\n\nexport default event => {\n  const today = moment();\n  const future = moment(event.date);\n  const isInTheFuture = future.diff(today) >= 0;\n  const isToday = future.isSame(today, \"d\") && future.isSame(today, \"y\");\n  return isInTheFuture || isToday;\n};\n","import React, { Component } from \"react\";\nimport Header from \"../common/Header\";\nimport Footer from \"../common/Footer\";\nimport { Element } from \"react-scroll\";\nimport HeroSection from \"../components/HeroSection\";\nimport MissionStatementSection from \"../components/MissionStatementSection\";\nimport PhotoReelSection from \"../components/PhotoReelSection\";\nimport { Waypoint } from \"react-waypoint\";\nimport { NAV_BAR_HEIGHT } from \"../common/consts/dimensions\";\nimport MailingListSection from \"../components/MailingListSection\";\n//import PastSpeakerSection from \"../components/PastSpeakersSection\";\nimport EventsSection from \"../components/HomePageEventsSection\";\nimport { initGoogleSheets, getAllEvents } from \"../scripts/googleSheets\";\nimport scrollRoutes from \"../common/consts/scroll-routes\";\nimport isTodayOrInTheFuturePredicate from \"../scripts/isTodayOrInTheFuturePredicate\";\n\nconst { EVENTS_SECTION_SCROLL_ROUTE } = scrollRoutes;\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n    initGoogleSheets(this.dataLoadedCB);\n  }\n  state = {\n    isAtHeroSection: true,\n    events: [],\n  };\n  dataLoadedCB = () => {\n    let events = getAllEvents();\n    events = events.filter(isTodayOrInTheFuturePredicate);\n    this.setState({ events: events });\n  };\n  renderHeroSection = () => (\n    <Waypoint\n      onEnter={() => this.setState({ isAtHeroSection: true })}\n      onLeave={() => this.setState({ isAtHeroSection: false })}\n      topOffset={NAV_BAR_HEIGHT + 5}\n    >\n      <div>\n        <HeroSection />\n      </div>\n    </Waypoint>\n  );\n\n  render() {\n    return (\n      <div>\n        {this.renderHeroSection()}\n        <Header isTransparent={this.state.isAtHeroSection} />\n        <Element name={EVENTS_SECTION_SCROLL_ROUTE}>\n          <EventsSection events={this.state.events} />\n        </Element>\n        <PhotoReelSection />\n        <MissionStatementSection />\n        <MailingListSection />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default IndexPage; //das\n","import React from \"react\";\nimport SectionHeader from \"../common/SectionHeader\";\nimport Event from \"./Event\";\n\nconst PACKAGE_NAME = \"events-page-events-section-component\";\n\nconst renderEvents = events => events.map(event => <Event event={event} />);\n\nconst EventsPageEventsSection = ({ events }) => (\n  <section className={PACKAGE_NAME}>\n    <div className=\"container\">\n      <SectionHeader text=\"events\" />\n      <div className=\"events-container\">\n        {Array.isArray(events) && renderEvents(events)}\n      </div>\n    </div>\n  </section>\n);\n\nexport default EventsPageEventsSection;\n","import React, { Component } from \"react\";\nimport { reverse, difference } from \"lodash\";\nimport Header from \"../common/Header\";\nimport MailingListSection from \"../components/MailingListSection\";\nimport Events from \"../components/EventsPageEventsSection\";\nimport Footer from \"../common/Footer\";\nimport isTodayOrInTheFuturePredicate from \"../scripts/isTodayOrInTheFuturePredicate\";\nimport { initGoogleSheets, getAllEvents } from \"../scripts/googleSheets\";\nconst getEvents = (events) => {\n  const upcomingEvents = reverse(events.filter(isTodayOrInTheFuturePredicate));\n  const pastEvents = reverse(difference(events, upcomingEvents));\n\n  return [...upcomingEvents, ...pastEvents];\n};\n\nclass EventsPage extends Component {\n  constructor(props) {\n    super(props);\n    initGoogleSheets(this.dataLoadedCB);\n  }\n  state = { events: [] };\n  dataLoadedCB = () => {\n    let events = getAllEvents();\n    this.setState({ events: events });\n  };\n  render() {\n    return (\n      <div>\n        <Header />\n        <Events events={getEvents(this.state.events)} />\n        <MailingListSection />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from \"react\";\nimport SectionHeader from \"../common/SectionHeader\";\n\nconst PACKAGE_NAME = \"about-section\";\n\nconst AboutSection = () => (\n  <section className={PACKAGE_NAME}>\n    <div className=\"container\">\n      <SectionHeader text=\"Who We Are\">\n        <p className=\"sub-title\">\n          The Animation Guild at UT Dallas was founded in 2012 and has been growing steadily since as an active student-run organization representing and serving animation students in the School of Arts, Technology, and Emerging Communication (ATEC).\n        </p>\n        <p>\n          In 2017, the Guild launched a new brand identity and refocused its mission around building a community of aspiring animation professionals. The Guild seeks to foster more collaboration among students and build stronger relationships with animation studios, alumni, faculty, and the local community.\n        </p>\n      </SectionHeader>\n    </div>\n  </section>\n);\n\nexport default AboutSection;\n","import React from \"react\";\nimport { FaLinkedinIn as LinkedinIcon } from \"react-icons/fa\";\nimport { FaGlobeAmericas as WebsiteIcon } from \"react-icons/fa\";\nimport { capitalize } from \"lodash\";\n\nconst PACKAGE_NAME = \"officer-section-component\";\n\nconst Officer = ({\n  firstName,\n  lastName,\n  position,\n  linkedin,\n  image,\n  website\n}) => (\n  <section className={PACKAGE_NAME}>\n    {image !== \"\" && (\n      <img\n        src={image}\n        alt={firstName + \" \" + lastName}\n        className=\"officer-image\"\n      />\n    )}\n    <div className=\"officer-information\">\n      <p className=\"position\">{capitalize(position)}</p>\n      <p className=\"name\">\n        {`${capitalize(firstName)} ${capitalize(lastName)}`}\n      </p>\n      <div className=\"officer-links\">\n        {linkedin && (\n          <a\n            className=\"linkedin-icon\"\n            href={linkedin}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <LinkedinIcon />\n          </a>\n        )}\n        {website && (\n          <a\n            className=\"website-icon\"\n            href={website}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <WebsiteIcon />\n          </a>\n        )}\n      </div>\n    </div>\n  </section>\n);\n\nexport default Officer;\n","import React from \"react\";\nimport SectionHeader from \"../common/SectionHeader\";\nimport Officer from \"./Officer\";\n\nconst PACKAGE_NAME = \"officers-section-component\";\n\nconst renderOfficers = (officer) => <Officer {...officer} />;\n\nconst OfficersSection = ({ officers = [] }) => (\n  <section className={PACKAGE_NAME}>\n    <SectionHeader text=\"The Team\" />\n    <div className=\"container\">\n      {officers.map((officer) => renderOfficers(officer))}\n    </div>\n  </section>\n);\n\nexport default OfficersSection;\n","import React, { Component } from \"react\";\nimport Header from \"../common/Header\";\nimport AboutSection from \"../components/AboutSection\";\nimport MailingListSection from \"../components/MailingListSection\";\nimport Footer from \"../common/Footer\";\nimport OfficersSection from \"../components/OfficersSection\";\nimport { initGoogleSheets, getAllOfficers } from \"../scripts/googleSheets\";\nimport { sortBy } from \"lodash\";\nclass AboutPage extends Component {\n  constructor(props) {\n    super(props);\n    initGoogleSheets(this.dataLoadedCB);\n  }\n  state = { officers: [] };\n  dataLoadedCB = () => {\n    let officers = getAllOfficers();\n    officers = sortBy(officers, \"order\");\n    this.setState({ officers: officers });\n  };\n  render() {\n    return (\n      <div>\n        <Header />\n        <AboutSection />\n        <OfficersSection officers={this.state.officers} />\n        <MailingListSection />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport Input from \"../common/Input\";\nimport Button from \"../common/Button\";\nimport SectionHeader from \"../common/SectionHeader\";\n\nconst PACKAGE_NAME = \"contact-form-component\";\n\nconst ContactForm = () => (\n  <section className={PACKAGE_NAME}>\n    <SectionHeader text=\"Keep In Touch\" />\n    <div className=\"container\">\n      <form action=\"https://formspree.io/xeqgqeao\" method=\"POST\">\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <div className=\"field half first\">\n          <label htmlFor=\"name\">Name*</label>\n          <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name\" />\n        </div>\n        <div className=\"field half\">\n          <label htmlFor=\"email\">Email*</label>\n          <Input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"example@domain.com\"\n          />\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"message\">Message*</label>\n          <Input name=\"message\" id=\"message\" rows=\"6\" isTextArea />\n        </div>\n        <Button type=\"submit\" text=\"Submit\" raised />\n      </form>\n    </div>\n  </section>\n);\n\nexport default ContactForm;\n","import React from \"react\";\nimport Header from \"../common/Header\";\nimport Footer from \"../common/Footer\";\nimport ContactForm from \"../components/ContactForm\";\nimport MailingListSection from \"../components/MailingListSection\";\n\nconst ContactPage = () => (\n  <div>\n    <Header />\n    <ContactForm />\n    <MailingListSection />\n    <Footer />\n  </div>\n);\n\nexport default ContactPage;\n","import React from \"react\";\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </div>\n);\n\nexport default NotFoundPage;\n","//Events that have a stream link.\n\nimport React from \"react\";\nimport SectionHeader from \"../common/SectionHeader\";\nimport Event from \"./Event\";\n\nconst PACKAGE_NAME = \"event-streams-section-component\";\nconst renderEvents = (events) =>\n  events.map((event) => <Event event={event} showStreamURL />);\n\nconst EventsPageEventsSection = ({ events }) => (\n  <section className={PACKAGE_NAME}>\n    <div className=\"container\">\n      <SectionHeader text=\"event streams\" />\n      <div className=\"events-container\">\n        {Array.isArray(events) && renderEvents(events)}\n      </div>\n    </div>\n  </section>\n);\n\nexport default EventsPageEventsSection;\n","export default (event) => {\n  if (!(\"streamURL\" in event)) {\n    return false;\n  }\n  if (event[\"streamURL\"].length === 0) {\n    return false;\n  }\n\n  return true;\n};\n","import React, { Component } from \"react\";\nimport { reverse } from \"lodash\";\nimport Header from \"../common/Header\";\nimport MailingListSection from \"../components/MailingListSection\";\nimport EventStreamsSection from \"../components/EventStreamsSection\";\nimport Footer from \"../common/Footer\";\nimport isTodayOrInTheFuturePredicate from \"../scripts/isTodayOrInTheFuturePredicate\";\nimport hasStreamURL from \"../scripts/hasStreamURL\";\nimport { initGoogleSheets, getAllEvents } from \"../scripts/googleSheets\";\nconst getEvents = (events) => {\n  const upcomingEvents = reverse(events.filter(isTodayOrInTheFuturePredicate));\n  const streamEvents = upcomingEvents.filter(hasStreamURL);\n  return streamEvents;\n};\n\nclass EventStreamsPage extends Component {\n  constructor(props) {\n    super(props);\n    initGoogleSheets(this.dataLoadedCB);\n  }\n  state = { events: [] };\n  dataLoadedCB = () => {\n    let events = getAllEvents();\n    this.setState({ events: events });\n  };\n  render() {\n    return (\n      <div>\n        <Header />\n        <EventStreamsSection events={getEvents(this.state.events)} />\n        <MailingListSection />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default EventStreamsPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport IndexPage from \"./pages/index\";\nimport EventsPage from \"./pages/Events\";\nimport {\n  HOME_PAGE_ROUTE,\n  EVENTS_PAGE_ROUTE,\n  ABOUT_PAGE_ROUTE,\n  CONTACT_PAGE_ROUTE,\n  EVENT_STREAMS_PAGE_ROUTE,\n} from \"./common/consts/routes\";\nimport AboutPage from \"./pages/About\";\nimport ContactPage from \"./pages/Contact\";\nimport NotFoundPage from \"./pages/404\";\nimport EventStreams from \"./pages/EventStreams\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={CONTACT_PAGE_ROUTE} component={ContactPage} />\n        <Route path={ABOUT_PAGE_ROUTE} component={AboutPage} />\n        <Route path={EVENTS_PAGE_ROUTE} component={EventsPage} />\n        <Route path={EVENT_STREAMS_PAGE_ROUTE} component={EventStreams} />\n        <Route exact path={HOME_PAGE_ROUTE} component={IndexPage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./layout/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}